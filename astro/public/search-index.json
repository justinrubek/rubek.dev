[{"body":"It's been a while since I have made any attempt at maintaining a personal website.\nThe last time was so long ago that I actually didn't know much of anything about JavaScript and mostly used HTML.\nThat isn't strictly a bad thing, as I am certainly not the type that enjoys being shipped a bunch of code for what could be a static page,\nbut on the other hand there is the management burden: while not huge, having to manually build out the whole site is tedious.\nI'm a sucker for tools that save me time without getting in my way so when I found [astro](https://astro.build) I thought I'd give it a chance.\n\n\nI've done a fairly significant amount of frontend development.\nMost of it has been with React, or tools like it such as [Yew](https://yew.rs).\nGenerally this has been just single page apps, but this is not always the case:\none of my projects, [reform](https://github.com/justinrubek/reform), yew gets injected into the page which is otherwise made as normal HTML.\nI've used this pattern for WordPress as well and I think it is useful because it allows for using very dynamic components where they are powerful while keeping the rest simple.\nThis isn't exactly how astro works, but the spirit of it is roughly the same.\nMany pages can just be simple markdown, but components can be used where they really shine.\n\n\nI haven't used many of the other popular static site generators, but I am very pleased so far.\nI was able to very quickly toss together a configuration and I have been able to make changes quickly.\nFor the most part everything has worked fine and I've been able to:\n\n- Handle development environments and builds using nix\n- Build a small index for the searchbox in Rust (thanks to [gray_matter](https://docs.rs/gray_matter/))\n- Deploy to my Nomad cluster using a small static-file webserver\n    - This is overkill for astro, but the nice part is it is easy to just produce a static folder that could be served with more traditional methods\n- Customize the rendering of mdx codeblocks with a [plugin](https://github.com/remarkjs/remark/blob/main/doc/plugins.md) (see the filename in the codeblock below)\n    - This works by adding CSS and `data-${whatever}` attributes to the codeblock's DOM based on key/values passed in on the first line of the codeblock (the `node.meta` values)\n\n```rust filename=main.rs\nfn main() {\n    println!(\"Hello, World!\");\n}\n```\n\nThe whole code for the site is available on [my GitHub](https://github.com/justinrubek/rubek.dev)","category":"posts","description":"A look at my new site","slug":"2023-01-01-hello-world","tags":["hello","astro"],"title":"hello"}]
